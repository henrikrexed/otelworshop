apiVersion: v1
kind: Service
metadata:
  name: qlkube
  labels:
    app: qlkube
spec:
  ports:
    - port: 80
      name: http
      targetPort: 8080
  selector:
    app: qlkube
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qlkube
  labels:
    app: qlkube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qlkube
      app.kubernetes.io/name: qlkube
      app.kubernetes.io/instance: qlkube
      app.kubernetes.io/component: qlkube
  template:
    metadata:
      labels:
        app: qlkube
        app.kubernetes.io/name: qlkube
        app.kubernetes.io/instance: qlkube
        app.kubernetes.io/component: qlkube
      annotations:
        sidecar.opentelemetry.io/inject: "true"
    spec:
      serviceAccountName: qlkube
      containers:
        - name: qlkube
          image: hrexed/qlkube:1.6.1-otel
          imagePullPolicy: Always
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: OTEL_K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: OTEL_K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://localhost:4317
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: qlkube
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: qlkube
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: qlkube
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: qlkube
subjects:
  - kind: ServiceAccount
    name: qlkube
    namespace: qlkube
